
name: Release
on:
  workflow_dispatch:
  push:
    tags:
      - '*.*.*'


jobs:
  release_manylinux:
    name: Release manylinux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-path: ['cp36-cp36m', 'cp37-cp37m', 'cp38-cp38', 'cp39-cp39', 'cp310-cp310']
    container: quay.io/pypa/manylinux2014_x86_64:latest
    env:
      TWINE_PASSWORD: ${{secrets.TWINE_PASSWORD}}
      TWINE_USERNAME: ${{secrets.TWINE_USERNAME}}
      RUSTFLAGS: -C target-cpu=k8

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: yum install -y libffi libffi-devel openssl openssl-devel
      - run: /opt/python/${{ matrix.python-path }}/bin/python -m venv .venv
      - run: .venv/bin/pip install -U pip wheel
      - run: .venv/bin/pip install -U twine maturin
      - run: .venv/bin/pip install -r requirements.txt
      - run: .venv/bin/maturin build --no-sdist --release --strip --manylinux 2014 -i /opt/python/${{ matrix.python-path }}/bin/python --target x86_64-unknown-linux-gnu
      - run: .venv/bin/pip install ormsgpack --no-index -f target/wheels
      - run: .venv/bin/pytest
      - run: .venv/bin/twine upload --non-interactive --skip-existing target/wheels/*
  release_windows:
    name: Release windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
    env:
      TWINE_PASSWORD: ${{secrets.TWINE_PASSWORD}}
      TWINE_USERNAME: ${{secrets.TWINE_USERNAME}}
      RUSTFLAGS: -C target-cpu=k8
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install --user -U pip wheel twine maturin
      - run: pip install -r requirements.txt
      - run: maturin build --no-sdist --release --strip -i $pythonLocation"python.exe"
      - run: pip install ormsgpack --no-index -f target/wheels
      - run: pytest
      - run: twine upload --non-interactive --skip-existing target\wheels\*

  release_macos_x64:
    name: Release macOS (x86_64)
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
    runs-on: macos-latest
    env:
      TWINE_PASSWORD: ${{secrets.TWINE_PASSWORD}}
      TWINE_USERNAME: ${{secrets.TWINE_USERNAME}}
      RUSTFLAGS: -C target-cpu=k8
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -U pip wheel twine maturin
      - run: pip install -r requirements.txt
      - run: maturin build --no-sdist --release --strip --manylinux off -i $pythonLocation/python --target x86_64-apple-darwin
      - run: pip install ormsgpack --no-index -f target/wheels
      - run: pytest
      - run: twine upload --non-interactive --skip-existing target/wheels/*

  release_macos_universal:
    name: Release macOS (universal)
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
    runs-on: macos-latest
    env:
      TWINE_PASSWORD: ${{secrets.TWINE_PASSWORD}}
      TWINE_USERNAME: ${{secrets.TWINE_USERNAME}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: aarch64-apple-darwin
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -U pip wheel twine maturin
      - run: PATH=$HOME/.cargo/bin:$PATH PYO3_CROSS_LIB_DIR=$(python -c "import sysconfig;print(sysconfig.get_config_var('LIBDIR'))") maturin build --no-sdist --release --strip --cargo-extra-args="--features=unstable-simd" --universal2
      - run: twine upload --non-interactive --skip-existing target/wheels/*
  release_sdist:
    name: Release sdist
    runs-on: ubuntu-latest
    env:
      TWINE_PASSWORD: ${{secrets.TWINE_PASSWORD}}
      TWINE_USERNAME: ${{secrets.TWINE_USERNAME}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: pip install -U pip wheel twine maturin
      - run: pip install -r requirements.txt
      - run: maturin sdist
      - run: twine upload --non-interactive --skip-existing target/wheels/*