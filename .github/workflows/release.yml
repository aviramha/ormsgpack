name: Release
# This should almost always run, but upload binaries only on tag.
on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.gitignore'
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - '*.*.*'
# Cancel previous runs on the same PR.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  RUST_TOOLCHAIN: nightly-2025-09-18
  UV_VERSION: 0.8.24
jobs:
  build-linux:
    name: Build Linux wheel
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
          - '3.14'
          - '3.14t'
        target:
          - 'x86_64-unknown-linux-gnu'
          - 'aarch64-unknown-linux-gnu'
        include:
          - target: 'x86_64-unknown-linux-gnu'
            runs-on: 'ubuntu-latest'
          - target: 'aarch64-unknown-linux-gnu'
            runs-on: 'ubuntu-24.04-arm'
    env:
      UV_PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.target }}
          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
          manylinux: auto
          args: --release -i python${{ matrix.python-version }} --features unstable-simd
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1
        with:
          version: ${{ env.UV_VERSION }}
      - run: uv sync --frozen --no-install-project
      - run: uv pip install ormsgpack --no-index -f target/wheels
      - run: uv run --no-sync pytest
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ormsgpack-${{ matrix.target }}-${{ matrix.python-version }}
          path: target/wheels
          retention-days: 1
  build-linux-cross:
    name: Build Linux wheel
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
          - '3.14'
        platform:
          - 'linux/amd64'
          - 'linux/arm64'
          - 'linux/arm/v7'
        libc:
          - 'gnu'
          - 'musl'
        include:
          - libc: 'gnu'
            manylinux: 'auto'
            os: 'bookworm'
            install_deps_command: ''
          - libc: 'musl'
            manylinux: 'musllinux_1_2'
            os: 'alpine'
            install_deps_command: 'apk add --no-cache build-base curl'
          - platform: 'linux/amd64'
            libc: 'musl'
            target: 'x86_64-unknown-linux-musl'
          - platform: 'linux/arm64'
            libc: 'musl'
            target: 'aarch64-unknown-linux-musl'
          - platform: 'linux/arm/v7'
            libc: 'gnu'
            target: 'armv7-unknown-linux-gnueabihf'
          - platform: 'linux/arm/v7'
            libc: 'musl'
            target: 'armv7-unknown-linux-musleabihf'
          - maturin_args: '--features unstable-simd'
          - platform: 'linux/arm/v7'
            maturin_args: ''
        exclude:
          - platform: 'linux/amd64'
            libc: 'gnu'
          - platform: 'linux/arm64'
            libc: 'gnu'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.target }}
          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
          manylinux: ${{ matrix.manylinux }}
          args: --release -i python${{ matrix.python-version }} ${{ matrix.maturin_args }}
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - run: |
          docker run \
            --rm \
            -e UV_CACHE_DIR=/work/.uv_cache \
            -v "$GITHUB_WORKSPACE":/work \
            -w /work \
            --platform ${{ matrix.platform }} \
            python:${{ matrix.python-version }}-${{ matrix.os }} \
            sh -e -c '
              ${{ matrix.install_deps_command }}
              curl --proto =https --tlsv1.2 -LsSf https://astral.sh/uv/${{ env.UV_VERSION }}/install.sh | sh
              export PATH=$PATH:$HOME/.local/bin
              uv sync --frozen --no-install-project
              uv pip install ormsgpack --no-index -f target/wheels
              uv run --no-sync pytest
            '
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ormsgpack-${{ matrix.target }}-${{ matrix.python-version }}
          path: target/wheels
          retention-days: 1
  build-windows:
    name: Build Windows wheel
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
          - '3.14'
        target:
          - 'x86_64-pc-windows-msvc'
          - 'aarch64-pc-windows-msvc'
        include:
          - target: 'x86_64-pc-windows-msvc'
            runs-on: 'windows-latest'
          - target: 'aarch64-pc-windows-msvc'
            runs-on: 'windows-11-arm'
        exclude:
          - python-version: '3.9'
            target: 'aarch64-pc-windows-msvc'
          - python-version: '3.10'
            target: 'aarch64-pc-windows-msvc'
    env:
      UV_PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - run: curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain none
      - shell: bash
        run: echo "$USERPROFILE/.cargo/bin" >> "$GITHUB_PATH"
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.target }}
          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
          args: --release -i ${{ env.pythonLocation }}\python.exe --features unstable-simd
      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1
        with:
          version: ${{ env.UV_VERSION }}
      - run: uv sync --frozen --no-install-project
      - run: uv pip install ormsgpack --no-index -f target/wheels
      - run: uv run --no-sync pytest
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ormsgpack-${{ matrix.target }}-${{ matrix.python-version }}
          path: target/wheels
          retention-days: 1
  build-macos-universal:
    name: Build macOS universal wheel
    strategy:
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
          - '3.14'
          - '3.14t'
    env:
      UV_PYTHON: ${{ matrix.python-version }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: universal2-apple-darwin
          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
          args: --release -i python${{ matrix.python-version }} --features unstable-simd
      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1
        with:
          version: ${{ env.UV_VERSION }}
      - run: uv sync --frozen --no-install-project
      - run: uv pip install ormsgpack --no-index -f target/wheels
      - run: uv run --no-sync pytest
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ormsgpack-universal-apple-darwin-${{ matrix.python-version }}
          path: target/wheels
          retention-days: 1
  build-sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.11
      - uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          command: sdist
          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ormsgpack-sdist
          path: target/wheels
          retention-days: 1
  release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-linux-cross
      - build-windows
      - build-macos-universal
      - build-sdist
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: ormsgpack-*
          path: dist
          merge-multiple: true
      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1
        with:
          version: ${{ env.UV_VERSION }}
      - run: uv publish
